


* Basic functions

#+begin_src lisp :tangle fluidized_bed.lisp
(ql:quickload "cl-ppcre")

(defun read-file (infile)
  (with-open-file (instream infile :direction :input :if-does-not-exist nil)
    (when instream 
      (let ((string (make-string (file-length instream))))
        (read-sequence string instream)
        string))))

(defun write-file (string outfile &key (action-if-exists :error))
  (check-type action-if-exists (member nil :error :new-version :rename :rename-and-delete 
					   :overwrite :append :supersede))
  (with-open-file (outstream outfile
			     :direction
			     :output
			     :if-does-not-exist :create
			     :if-exists action-if-exists)
    (write-sequence string outstream)))
#+end_src


* Export files


Each file has different porosity

#+begin_src lisp  :tangle fluidized_bed.lisp
(defun process_string (string &key (fname "fsi1.sif") (porosity "1.0e4 1.0e4"))
  (setf string1
	(cl-ppcre:regex-replace-all
	 "post_file_variable"
	 string
	 fname))
  (setf string2
	(cl-ppcre:regex-replace-all
	 "porosity_variable"
	 string1
	 porosity))
  string2
  )

(defun write_new_sif (infile outfile
		      &key (fname  "f10.sif")
			(porosity "0.5e04 0.5e04")
			)
  (setf readstring (process_string
		    (read-file infile)
		    :fname fname
		    :porosity porosity
		    ))
  (write-file readstring  outfile :action-if-exists :overwrite)
  )

(defun write-sif-files-to-folder (fname infile sif-folder)
  (loop for i from 0 to 200
	 do (let ((fname
		    (concatenate 'string
				 fname
				 "_t"
				 (format nil "~5,'0D" i)
				 ".vtu"
				 ))
		  (outfile
		    (concatenate 'string
				 sif-folder
				 fname
				 (format nil "~5,'0D" i)
				 ".sif"
				 ))
		  (porosity
		    (concatenate 'string
				 (let ((npor (+ 50 (* i 2))))
				   (format nil "~5,2F ~5,2F" npor npor)
				   )))
		  )
	      (write_new_sif
	       infile
	       outfile
	       :fname fname
	       :porosity porosity )
	      ))
)

#+end_src


* Call them

#+name call_them
#+begin_src lisp  
(load "fluidized_bed.lisp")

(setf infile "/hb/CAE/PorousPipe00/PorousPipe01/Pipe.sif")

(setf SIF-FOLDER "/hb/CAE/PorousPipe00/PorousPipe01/sif/")

(write-sif-files-to-folder "fluidized_bed"
			   infile
			   SIF-FOLDER)

#+end_src


* run the code

#+begin_src shell :async :tangle /hb/CAE/PorousPipe00/PorousPipe01/sif/run-sif-files.sh
cd "/hb/CAE/PorousPipe00/PorousPipe01/sif/"
for f in $(ls *.sif);do
    ElmerSolver $f
done
#+end_src

#+RESULTS:


* rename results

Elmer outputs: *t_0001.vtu result file for timestep 1.
Each timestep corresponds to different porosity, so the t_0001.vtu has to be removed.


#+begin_src sh :async :tangle /hb/CAE/PorousPipe00/PorousPipe01/sif/change-names.sh
cd "/hb/CAE/PorousPipe00/PorousPipe01/sif/resu/delme/"

for f in $(ls);do
	 out=$(echo $f | sed -e 's/_t0001.vtu/\.vtu/g')
	 mv $f  ./$out
done



#+end_src

